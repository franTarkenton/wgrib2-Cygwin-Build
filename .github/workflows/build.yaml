name: wgrib2-cygwin-compile

# used on push for testing / development
on:
  push:
    

# on:
#   pull_request:
#     # debug: remove the dev,putting build action on non existent branches for debug
#     branches: ['master', 'main']
#     types: ['opened', 'reopened']
#     paths-ignore:
#       - .gitignore
#       - LICENSE
#       - README.md
#       - code_of_conduct.md
      
jobs:
  # This workflow contains a single job called "build"
  buildjob:
    defaults:
      run:
        shell: bash

    name: 'Compile WGRIB2'
    # The type of runner that the job will run on
    runs-on: windows-2019
    env:
      CC: gcc
      FC: gfortran
      
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      id: checkout
      with:
        fetch-depth: 0

    # - name: Get Cygwin
    #   id: getCygwin
    #   shell: powershell
    #   run: |
    #     .\cygwin-conf.ps1

    # - name: Set up Cygwin
    #   uses: egor-tensin/setup-cygwin@v3
    #   with:
    #     platform: x64
    #     packages: cmake awk make gcc-core gcc-fortran gcc-g++ make unzip wget curl nano cygport zlib
    #     hardlinks: 1

    # - name: evaluteCygwin
    #   id: evaluteCygwin
    #   shell: bash
    #   run: |
    #     ls -l
    #     cd cygdir
    #     ls -l
    #     cd bin
    #     ls -l

    - name: Compile wgrib2
      id: compileWgrib2
      shell: cmd
      run: |
        dir
        C:\tools\cygwin\bin\bash.exe -c "./build-wgrib2.sh"

    - name: copy wgrib2 artifact
      id: copyWgrib2Artivact
      shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      run: |
        cd wgrib-cyg
        tar -cvf - grib2 | gzip > ../wgrib-cyg.tgz
        
